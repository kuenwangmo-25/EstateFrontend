{"version":3,"sources":["../src/index.js"],"names":["h","name","attributes","node","rest","children","length","arguments","push","pop","nodeName","key","patch","element","patchElement","parentNode","isRecycling","recycleElement","lifecycleStack","toLowerCase","map","call","childNodes","nodeType","nodeValue","clone","target","source","obj","i","getKey","updateAttribute","value","isSVG","oldValue","setAttribute","removeAttribute","createElement","document","createTextNode","createElementNS","oncreate","appendChild","updateElement","oldAttributes","cb","onupdate","removeChildren","ondestroy","removeElement","parent","done","removeChild","onremove","oldNode","newElement","insertBefore","oldElements","oldKeyed","newKeyed","oldChild","oldKey","j","newChild","newKey","recyledNode"],"mappings":"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","file":"picodom.js","sourcesContent":["var map = [].map\nvar isRecycling\nvar lifecycleStack = []\n\nexport function h(name, attributes) {\n  var node\n  var rest = []\n  var children = []\n  var length = arguments.length\n\n  while (length-- > 2) rest.push(arguments[length])\n\n  while (rest.length) {\n    if ((node = rest.pop()) && node.pop /* Array? */) {\n      for (length = node.length; length--; ) {\n        rest.push(node[length])\n      }\n    } else if (node != null && node !== true && node !== false) {\n      children.push(node)\n    }\n  }\n\n  return typeof name === \"function\"\n    ? name(attributes || {}, children)\n    : {\n        nodeName: name,\n        attributes: attributes || {},\n        children: children,\n        key: attributes && attributes.key\n      }\n}\n\nexport function patch(node, element) {\n  element = patchElement(\n    element && element.parentNode,\n    element,\n    (isRecycling = element && element.node != null)\n      ? element.node\n      : element && recycleElement(element),\n    node\n  )\n  element.node = node\n\n  while (lifecycleStack.length) lifecycleStack.pop()()\n\n  return element\n}\n\nfunction recycleElement(element) {\n  return {\n    // recycled: true,\n    nodeName: element.nodeName.toLowerCase(),\n    attributes: {},\n    children: map.call(element.childNodes, function(element) {\n      return element.nodeType === 3 // Node.TEXT_NODE\n        ? element.nodeValue\n        : recycleElement(element)\n    })\n  }\n}\n\nfunction clone(target, source) {\n  var obj = {}\n\n  for (var i in target) obj[i] = target[i]\n  for (var i in source) obj[i] = source[i]\n\n  return obj\n}\n\nfunction getKey(node) {\n  return node ? node.key : null\n}\n\nfunction updateAttribute(element, name, value, isSVG, oldValue) {\n  if (name === \"key\") {\n  } else if (name === \"style\") {\n    for (var i in clone(oldValue, value)) {\n      element[name][i] = value == null || value[i] == null ? \"\" : value[i]\n    }\n  } else {\n    if (typeof value === \"function\" || (name in element && !isSVG)) {\n      element[name] = value == null ? \"\" : value\n    } else if (value != null && value !== false) {\n      element.setAttribute(name, value)\n    }\n\n    if (value == null || value === false) {\n      element.removeAttribute(name)\n    }\n  }\n}\n\nfunction createElement(node, isSVG) {\n  var element =\n    typeof node === \"string\" || typeof node === \"number\"\n      ? document.createTextNode(node)\n      : (isSVG = isSVG || node.nodeName === \"svg\")\n        ? document.createElementNS(\"http://www.w3.org/2000/svg\", node.nodeName)\n        : document.createElement(node.nodeName)\n\n  var attributes = node.attributes\n  if (attributes) {\n    if (attributes.oncreate) {\n      lifecycleStack.push(function() {\n        attributes.oncreate(element)\n      })\n    }\n\n    for (var i = 0; i < node.children.length; i++) {\n      element.appendChild(createElement(node.children[i], isSVG))\n    }\n\n    for (var name in attributes) {\n      updateAttribute(element, name, attributes[name], isSVG)\n    }\n  }\n\n  return element\n}\n\nfunction updateElement(element, /*oldNode,*/ oldAttributes, attributes, isSVG) {\n  for (var name in clone(oldAttributes, attributes)) {\n    if (\n      attributes[name] !==\n      (name === \"value\" || name === \"checked\"\n        ? element[name]\n        : oldAttributes[name])\n    ) {\n      updateAttribute(\n        element,\n        name,\n        attributes[name],\n        isSVG,\n        oldAttributes[name]\n      )\n    }\n  }\n\n  var cb = isRecycling ? attributes.onupdate : attributes.oncreate\n  // var cb = oldNode.recycled ? attributes.oncreate : attributes.onupdate\n  if (cb) {\n    lifecycleStack.push(function() {\n      cb(element, oldAttributes)\n    })\n  }\n}\n\nfunction removeChildren(element, node) {\n  var attributes = node.attributes\n  if (attributes) {\n    for (var i = 0; i < node.children.length; i++) {\n      removeChildren(element.childNodes[i], node.children[i])\n    }\n\n    if (attributes.ondestroy) {\n      attributes.ondestroy(element)\n    }\n  }\n  return element\n}\n\nfunction removeElement(parent, element, node) {\n  function done() {\n    parent.removeChild(removeChildren(element, node))\n  }\n\n  var cb = node.attributes && node.attributes.onremove\n  if (cb) {\n    cb(element, done)\n  } else {\n    done()\n  }\n}\n\nfunction patchElement(parent, element, oldNode, node, isSVG) {\n  if (node === oldNode) {\n  } else if (oldNode == null || oldNode.nodeName !== node.nodeName) {\n    var newElement = createElement(node, isSVG)\n    if (parent) {\n      parent.insertBefore(newElement, element)\n      removeElement(parent, element, oldNode)\n    }\n    element = newElement\n  } else if (oldNode.nodeName == null) {\n    element.nodeValue = node\n  } else {\n    updateElement(\n      element,\n      // oldNode,\n      oldNode.attributes,\n      node.attributes,\n      (isSVG = isSVG || node.nodeName === \"svg\")\n    )\n\n    var oldElements = []\n    var oldKeyed = {}\n    var newKeyed = {}\n\n    for (var i = 0; i < oldNode.children.length; i++) {\n      oldElements[i] = element.childNodes[i]\n\n      var oldChild = oldNode.children[i]\n      var oldKey = getKey(oldChild)\n\n      if (null != oldKey) {\n        oldKeyed[oldKey] = [oldElements[i], oldChild]\n      }\n    }\n\n    var i = 0\n    var j = 0\n\n    while (j < node.children.length) {\n      var oldChild = oldNode.children[i]\n      var newChild = node.children[j]\n\n      var oldKey = getKey(oldChild)\n      var newKey = getKey(newChild)\n\n      if (newKeyed[oldKey]) {\n        i++\n        continue\n      }\n\n      if (newKey == null) {\n        if (oldKey == null) {\n          patchElement(element, oldElements[i], oldChild, newChild, isSVG)\n          j++\n        }\n        i++\n      } else {\n        var recyledNode = oldKeyed[newKey] || []\n\n        if (oldKey === newKey) {\n          patchElement(element, recyledNode[0], recyledNode[1], newChild, isSVG)\n          i++\n        } else if (recyledNode[0]) {\n          patchElement(\n            element,\n            element.insertBefore(recyledNode[0], oldElements[i]),\n            recyledNode[1],\n            newChild,\n            isSVG\n          )\n        } else {\n          patchElement(element, oldElements[i], null, newChild, isSVG)\n        }\n\n        j++\n        newKeyed[newKey] = newChild\n      }\n    }\n\n    while (i < oldNode.children.length) {\n      var oldChild = oldNode.children[i]\n      if (getKey(oldChild) == null) {\n        removeElement(element, oldElements[i], oldChild)\n      }\n      i++\n    }\n\n    for (var i in oldKeyed) {\n      if (!newKeyed[oldKeyed[i][1].key]) {\n        removeElement(element, oldKeyed[i][0], oldKeyed[i][1])\n      }\n    }\n  }\n  return element\n}\n"]}